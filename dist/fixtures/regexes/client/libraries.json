[{ "regex": "Wget(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "Wget" }, { "regex": "Guzzle(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "Guzzle (PHP HTTP Client)" }, { "regex": "(?:lib)?curl(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "curl" }, { "regex": "python-requests(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "Python Requests" }, { "regex": "Python-urllib(?:/?(\\d+[\\.\\d]+))?", "version": "$1", "name": "Python urllib" }, { "regex": "Java(?:/?(\\d+[\\.\\d]+))?", "version": "$1", "name": "Java" }, { "regex": "(?:perlclient|libwww-perl)(?:/?(\\d+[\\.\\d]+))?", "version": "$1", "name": "Perl" }, { "regex": "okhttp/([\\d\\.]+)", "version": "$1", "name": "OkHttp" }, { "regex": "HTTP_Request2(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "HTTP_Request2" }, { "regex": "HTTP_Request2(?:/(\\d+[\\.\\d]+))?", "version": "$1", "url": "http://pear.php.net/package/http_request2", "name": "HTTP_Request2" }, { "regex": "Mechanize(?:/(\\d+[\\.\\d]+))?", "version": "$1", "url": "http://github.com/sparklemotion/mechanize/", "name": "Mechanize" }, { "regex": "aiohttp(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "aiohttp" }, { "regex": "Google-HTTP-Java-Client(?:/(\\d+[\\.\\d\\w-]+))?", "version": "$1", "name": "Google HTTP Java Client" }, { "regex": "WWW-Mechanize(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "WWW-Mechanize" }, { "regex": "Faraday(?: v(\\d+[\\.\\d]+))?", "version": "$1", "name": "Faraday" }, { "regex": "(?:Go-http-client|Go )/?(?:(\\d+[\\.\\d]+))?(?: package http)?", "version": "$1", "name": "Go-http-client" }, { "regex": "urlgrabber(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "urlgrabber (yum)" }, { "regex": "libdnf(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "libdnf" }, { "regex": "HTTPie(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "HTTPie" }, { "regex": "rest-client/(\\d+[\\.\\d]+).*ruby", "version": "$1", "name": "REST Client for Ruby" }, { "regex": "RestSharp/(\\d+[\\.\\d]+)", "version": "$1", "url": "http://restsharp.org/", "name": "RestSharp" }, { "regex": "scalaj-http/(\\d+[\\.\\d]+)", "version": "$1", "url": "https://github.com/scalaj/scalaj-http", "name": "ScalaJ HTTP" }, { "regex": "REST::Client/(\\d+)", "version": "$1", "url": "https://metacpan.org/pod/REST::Client", "name": "Perl REST::Client" }, { "regex": "node-fetch/(\\d+[\\.\\d]+)", "version": "$1", "url": "https://github.com/node-fetch/node-fetch", "name": "Node Fetch" }, { "regex": "ReactorNetty/(\\d+[\\.\\d]+)", "version": "$1", "url": "https://github.com/reactor/reactor-netty", "name": "ReactorNetty" }, { "regex": "PostmanRuntime(?:/(\\d+[\\.\\d]+))?", "version": "$1", "url": "https://github.com/postmanlabs/postman-runtime", "name": "Postman Desktop" }, { "regex": "Jakarta Commons-HttpClient/([\\.\\d]+)", "version": "$1", "url": "https://hc.apache.org/httpclient-3.x", "name": "Jakarta Commons HttpClient" }, { "regex": "WinHttp.WinHttpRequest.+([\\.\\d]+)", "version": "$1", "name": "WinHttp WinHttpRequest" }, { "regex": "Embarcadero URI Client/([\\.\\d]+)", "version": "$1", "name": "Embarcadero URI Client" }, { "regex": "Mikrotik/([\\.\\d]+)", "version": "$1", "name": "Mikrotik Fetch" }, { "regex": "GRequests(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "GRequests" }, { "regex": "akka-http/([\\.\\d]+)", "version": "$1", "name": "Akka HTTP" }, { "regex": "aria2(?:/(\\d+[\\.\\d]+))?", "version": "$1", "name": "Aria2" }, { "regex": "BTWebClient/", "version": "", "name": "uTorrent" }, { "regex": "gvfs/(?:(\\d+[\\.\\d]+))?", "version": "$1", "name": "gvfs" }, { "regex": "uclient-fetch", "version": "", "name": "uclient-fetch" }, { "regex": "cpprestsdk/([\\.\\d]+)", "version": "$1", "name": "C++ REST SDK" }, { "regex": "lua-resty-http/([\\.\\d]+).+ngx_", "version": "$1", "name": "LUA OpenResty NGINX" }]
